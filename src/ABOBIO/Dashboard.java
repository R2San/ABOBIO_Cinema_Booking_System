/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ABOBIO;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jackson
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        NowPlaying.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jColorChooser1 = new javax.swing.JColorChooser();
        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        txSignout = new javax.swing.JButton();
        txWelcome = new javax.swing.JLabel();
        txProfile = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        NowPlaying = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        txNowPlaying = new javax.swing.JLabel();
        txMovie1 = new javax.swing.JButton();
        txMovie1a = new javax.swing.JButton();
        txMovie2 = new javax.swing.JButton();
        txMovie2a = new javax.swing.JButton();
        txMovie3 = new javax.swing.JButton();
        txMovie3a = new javax.swing.JButton();
        txMovie4 = new javax.swing.JButton();
        txMovie4a = new javax.swing.JButton();
        txMovie5 = new javax.swing.JButton();
        txMovie5a = new javax.swing.JButton();
        txMovie6 = new javax.swing.JButton();
        txMovie6a = new javax.swing.JButton();
        UpComing = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        txUpComing = new javax.swing.JLabel();
        txMovie1Up = new javax.swing.JButton();
        txMovie1aUp = new javax.swing.JButton();
        txMovie2Up = new javax.swing.JButton();
        txMovie2aUp = new javax.swing.JButton();
        txMovie3Up = new javax.swing.JButton();
        txMovie3aUp = new javax.swing.JButton();
        txMovie4Up = new javax.swing.JButton();
        txMovie4aUp = new javax.swing.JButton();
        txMovie5Up = new javax.swing.JButton();
        txMovie5aUp = new javax.swing.JButton();
        txMovie6Up = new javax.swing.JButton();
        txMovie6aUp = new javax.swing.JButton();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ABOBIO");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 28)); // NOI18N
        jLabel1.setText("ABOBIO Ticket Booking Movie");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(844, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(645, 645, 645)
                    .addComponent(jLabel3)
                    .addContainerGap(645, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(9, 9, 9))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(27, 27, 27)
                    .addComponent(jLabel3)
                    .addContainerGap(28, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        txSignout.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        txSignout.setText("Sign Out");
        txSignout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txSignoutActionPerformed(evt);
            }
        });

        txUsername1.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        txUsername1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txUsername1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txUsername1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txWelcome.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txWelcome.setText("Welcome");
        txWelcome.setToolTipText("");
        txWelcome.setAutoscrolls(true);
        txWelcome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txProfile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User.png"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jButton1.setText("Now Playing");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jButton2.setText("UpComing");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Gadugi", 0, 18)); // NOI18N
        jButton3.setText("View Ticket");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        NowPlaying.setToolTipText("");
        NowPlaying.setHorizontalScrollBar(null);

        jPanel4.setBackground(new java.awt.Color(255, 153, 0));

        txNowPlaying.setFont(new java.awt.Font("Gadugi", 1, 30)); // NOI18N
        txNowPlaying.setText("NOW PLAYING");

        txMovie1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/m.LoveThunder.png"))); // NOI18N
        txMovie1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie1ActionPerformed(evt);
            }
        });

        txMovie1a.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie1a.setText("Thor : Love and Thunder");
        txMovie1a.setBorder(null);
        txMovie1a.setContentAreaFilled(false);
        txMovie1a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie1aActionPerformed(evt);
            }
        });

        txMovie2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/m.Scream.png"))); // NOI18N
        txMovie2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie2ActionPerformed(evt);
            }
        });

        txMovie2a.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie2a.setText("Scream");
        txMovie2a.setContentAreaFilled(false);
        txMovie2a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie2aActionPerformed(evt);
            }
        });

        txMovie3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/m.Uncharted.png"))); // NOI18N
        txMovie3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie3ActionPerformed(evt);
            }
        });

        txMovie3a.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie3a.setText("Uncharted");
        txMovie3a.setBorder(null);
        txMovie3a.setContentAreaFilled(false);
        txMovie3a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie3aActionPerformed(evt);
            }
        });

        txMovie4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/m.Deadpool3.png"))); // NOI18N
        txMovie4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie4ActionPerformed(evt);
            }
        });

        txMovie4a.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie4a.setText("DeadPool 3");
        txMovie4a.setBorder(null);
        txMovie4a.setContentAreaFilled(false);
        txMovie4a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie4aActionPerformed(evt);
            }
        });

        txMovie5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/m.FantasticFour.png"))); // NOI18N
        txMovie5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie5ActionPerformed(evt);
            }
        });

        txMovie5a.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie5a.setText("Fantastic Four");
        txMovie5a.setContentAreaFilled(false);
        txMovie5a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie5aActionPerformed(evt);
            }
        });

        txMovie6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/m.Paw.png"))); // NOI18N
        txMovie6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie6ActionPerformed(evt);
            }
        });

        txMovie6a.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie6a.setText("Paw Patrol The Movie");
        txMovie6a.setBorder(null);
        txMovie6a.setContentAreaFilled(false);
        txMovie6a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie6aActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(txMovie1a)
                .addGap(147, 147, 147)
                .addComponent(txMovie2a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txMovie3a)
                .addGap(141, 141, 141))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(txMovie4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txNowPlaying)
                            .addComponent(txMovie1)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(txMovie4a)))
                .addGap(93, 93, 93)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txMovie5)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(txMovie5a)))
                        .addGap(94, 94, 94)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txMovie6a)
                            .addComponent(txMovie6)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txMovie2)
                        .addGap(94, 94, 94)
                        .addComponent(txMovie3)))
                .addGap(0, 76, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(txNowPlaying)
                .addGap(48, 48, 48)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txMovie1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txMovie3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txMovie2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txMovie3a)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txMovie1a)
                        .addComponent(txMovie2a)))
                .addGap(43, 43, 43)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txMovie4)
                    .addComponent(txMovie5)
                    .addComponent(txMovie6, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txMovie4a)
                    .addComponent(txMovie5a)
                    .addComponent(txMovie6a))
                .addContainerGap(953, Short.MAX_VALUE))
        );

        NowPlaying.setViewportView(jPanel4);

        UpComing.setPreferredSize(new java.awt.Dimension(1083, 1814));

        jPanel7.setBackground(new java.awt.Color(255, 153, 0));
        jPanel7.setEnabled(false);
        jPanel7.setPreferredSize(new java.awt.Dimension(1083, 1814));

        txUpComing.setFont(new java.awt.Font("Gadugi", 1, 30)); // NOI18N
        txUpComing.setText("UPCOMING");

        txMovie1Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Up.80Brady.png"))); // NOI18N
        txMovie1Up.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie1Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie1UpActionPerformed(evt);
            }
        });

        txMovie1aUp.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie1aUp.setText("80 For Brady");
        txMovie1aUp.setBorder(null);
        txMovie1aUp.setContentAreaFilled(false);
        txMovie1aUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie1aUpActionPerformed(evt);
            }
        });

        txMovie2Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Up.Marlone.png"))); // NOI18N
        txMovie2Up.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie2Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie2UpActionPerformed(evt);
            }
        });

        txMovie2aUp.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie2aUp.setText("Marlowe");
        txMovie2aUp.setContentAreaFilled(false);
        txMovie2aUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie2aUpActionPerformed(evt);
            }
        });

        txMovie3Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Up.WhoAre.png"))); // NOI18N
        txMovie3Up.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie3Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie3UpActionPerformed(evt);
            }
        });

        txMovie3aUp.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie3aUp.setText("Who Are You People");
        txMovie3aUp.setContentAreaFilled(false);
        txMovie3aUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie3aUpActionPerformed(evt);
            }
        });

        txMovie4Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Up.Cocaine.png"))); // NOI18N
        txMovie4Up.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie4Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie4UpActionPerformed(evt);
            }
        });

        txMovie4aUp.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie4aUp.setText("Cocaine Bear");
        txMovie4aUp.setBorder(null);
        txMovie4aUp.setContentAreaFilled(false);
        txMovie4aUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie4aUpActionPerformed(evt);
            }
        });

        txMovie5Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Up.Mummies.png"))); // NOI18N
        txMovie5Up.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie5Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie5UpActionPerformed(evt);
            }
        });

        txMovie5aUp.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie5aUp.setText("Mummies");
        txMovie5aUp.setBorder(null);
        txMovie5aUp.setContentAreaFilled(false);
        txMovie5aUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie5aUpActionPerformed(evt);
            }
        });

        txMovie6Up.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Up.Shazam.png"))); // NOI18N
        txMovie6Up.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txMovie6Up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie6UpActionPerformed(evt);
            }
        });

        txMovie6aUp.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        txMovie6aUp.setText("Shazam! Fury Of The Gods");
        txMovie6aUp.setBorder(null);
        txMovie6aUp.setContentAreaFilled(false);
        txMovie6aUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txMovie6aUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(txMovie1aUp, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(65, 65, 65)
                            .addComponent(txUpComing))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(65, 65, 65)
                            .addComponent(txMovie1Up, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txMovie4Up, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txMovie4aUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(90, 90, 90)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txMovie2aUp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txMovie2Up, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txMovie5Up, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txMovie5aUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txMovie6Up, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txMovie3Up, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(txMovie3aUp, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(txMovie6aUp, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(txUpComing)
                .addGap(46, 46, 46)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txMovie2Up)
                    .addComponent(txMovie1Up)
                    .addComponent(txMovie3Up))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txMovie2aUp)
                    .addComponent(txMovie1aUp)
                    .addComponent(txMovie3aUp))
                .addGap(47, 47, 47)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txMovie4Up)
                    .addComponent(txMovie5Up, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txMovie6Up))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txMovie5aUp)
                    .addComponent(txMovie4aUp)
                    .addComponent(txMovie6aUp))
                .addGap(0, 959, Short.MAX_VALUE))
        );

        UpComing.setViewportView(jPanel7);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txProfile, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(txWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txUsername1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(txSignout))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(NowPlaying, javax.swing.GroupLayout.DEFAULT_SIZE, 1072, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(225, Short.MAX_VALUE)
                    .addComponent(UpComing, javax.swing.GroupLayout.PREFERRED_SIZE, 1071, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172)
                        .addComponent(txSignout))
                    .addComponent(NowPlaying, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(UpComing, javax.swing.GroupLayout.DEFAULT_SIZE, 897, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap(1302, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap()))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(1136, 1136, 1136)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(61, 61, 61)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txSignoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txSignoutActionPerformed
        this.dispose();
        Login a = new Login();
        a.setVisible(true);
    }//GEN-LAST:event_txSignoutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        NowPlaying.setVisible(true);
        UpComing.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        NowPlaying.setVisible(false);
        UpComing.setVisible(true);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        // TODO add your handling code here:
//        try{
//            Connection c = Koneksi.getKoneksi();
//            Statement s = c.createStatement();
//            String trId = Payment.txTrId.getText().toString().trim();
//            
//            String sql = "SELECT td.transactionid, m.title, s.date, s.time, td.seat, td.type FROM transactiondetails td JOIN movies m ON m.movieid = td.movieid JOIN moviedetail md on md.ticketid = td.ticketid"
//                    + "JOIN schedule s ON s.scheduleid = md.scheduleid WHERE td.transactionid = '"+trId+"'";
//                    ResultSet m = s.executeQuery(sql);
            
            
//            if(m.next()){
                ViewTicket.txTrId2.setText(Payment.txTrId.getText());
                ViewTicket.txTitle2.setText(Payment.txTitle.getText());
                ViewTicket.txDate2.setText(Payment.txDate.getText());
                ViewTicket.txTime2.setText(Payment.txTime.getText());
                ViewTicket.txSeat2.setText(Payment.txSeat.getText());
                ViewTicket.txType2.setText(Payment.txType.getText());
                
                
//            }
//        }catch(SQLException e){
//            JOptionPane.showMessageDialog(null,e);
//        }


        
            this.dispose();
            ViewTicket v = new ViewTicket();
            v.setVisible(true);
            
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txMovie6aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie6aActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Paw Patrol The Movie' and Genre ='Animation, Action, Adventure'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Paw.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie6aActionPerformed

    private void txMovie1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie1ActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Thor : Love And Thunder' and Genre ='Action, Adventure, Comedy'";
            ResultSet m = s.executeQuery(sql);
            
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.LoveThunder.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie1ActionPerformed

    private void txMovie5aUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie5aUpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Mummies' and upGenre ='Animation, Comedy, Family'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Mummies.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie5aUpActionPerformed

    private void txMovie1UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie1UpActionPerformed
        // TODO add your handling code here:
          try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='80 For Brady' and upGenre ='Comedy, Drama, Sport'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
            ImageIcon icon = new ImageIcon("src/images/Up.80Brady.png");
            ListMovie.txImage.setIcon(icon);
            
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie1UpActionPerformed

    private void txMovie1aUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie1aUpActionPerformed
        // TODO add your handling code here:
                  try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='80 For Brady' and upGenre ='Comedy, Drama, Sport'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
            ImageIcon icon = new ImageIcon("src/images/Up.80Brady.png");
            ListMovie.txImage.setIcon(icon);
            
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie1aUpActionPerformed

    private void txMovie1aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie1aActionPerformed
        // TODO add your handling code here:
            try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Thor : Love And Thunder' and Genre ='Action, Adventure, Comedy'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.LoveThunder.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie1aActionPerformed

    private void txMovie2UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie2UpActionPerformed
        // TODO add your handling code here:
         try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Marlowe' and upGenre ='Crime, Mystery, Thriller'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
            ImageIcon icon = new ImageIcon("src/images/Up.Marlone.png");
            ListMovie.txImage.setIcon(icon);
                
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie2UpActionPerformed

    private void txMovie2aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie2aActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Scream' and Genre ='Horror, Thriller, Mystery'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Scream.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie2aActionPerformed

    private void txMovie2aUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie2aUpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Marlowe' and upGenre ='Crime, Mystery, Thriller'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Marlone.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie2aUpActionPerformed

    private void txMovie5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie5ActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Fantastic Four' and Genre ='Action, Adventure, Sci-Fi'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.FantasticFour.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie5ActionPerformed

    private void txMovie5aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie5aActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Fantastic Four' and Genre ='Action, Adventure, Sci-Fi'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.FantasticFour.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText("asd\n " + "asd" + "\n" + "Cacadkali");
                ListMovie.txSynopsis.setText("Omaigat\n kiw");
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie5aActionPerformed

    private void txMovie3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie3ActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Uncharted' and Genre ='Action, Adventure'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Uncharted.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie3ActionPerformed

    private void txMovie3aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie3aActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Uncharted' and Genre ='Action, Adventure'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Uncharted.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie3aActionPerformed

    private void txMovie2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie2ActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Scream' and Genre ='Horror, Mystery, Thriller'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Scream.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie2ActionPerformed

    private void txMovie4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie4ActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Deadpool 3' and Genre ='Action, Comedy, Sci-Fi'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Deadpool3.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie4ActionPerformed

    private void txMovie4aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie4aActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Deadpool 3' and Genre ='Action, Comedy, Sci-Fi'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Deadpool3.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie4aActionPerformed

    private void txMovie6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie6ActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM movies WHERE title ='Paw Patrol The Movie' and Genre ='Animation, Action, Adventure'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ImageIcon icon = new ImageIcon("src/images/m.Paw.png");
                ListMovie.txMovieId.setText(m.getString(1));
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("NOW PLAYING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();
                t.txBooking.setVisible(true);
                t.txComingSoon.setVisible(false);

                t.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie6ActionPerformed

    private void txMovie3UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie3UpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Who Are You People' and upGenre ='Drama'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.WhoAre.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie3UpActionPerformed

    private void txMovie3aUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie3aUpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Who Are You People' and upGenre ='Drama'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.WhoAre.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie3aUpActionPerformed

    private void txMovie4UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie4UpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Cocaine Bear' and upGenre ='Thriller'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Cocaine.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie4UpActionPerformed

    private void txMovie4aUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie4aUpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Cocaine Bear' and upGenre ='Thriller'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Cocaine.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie4aUpActionPerformed

    private void txMovie5UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie5UpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Mummies' and upGenre ='Animation, Comedy, Family'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Mummies.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie5UpActionPerformed

    private void txMovie6UpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie6UpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Shazam! Fury of the Gods' and upGenre ='Action, Adventure, Comedy'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Shazam.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie6UpActionPerformed

    private void txMovie6aUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txMovie6aUpActionPerformed
        // TODO add your handling code here:
        try{
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            
            String sql = "SELECT * FROM upcoming WHERE upTitle ='Shazam! Fury of the Gods' and upGenre ='Action, Adventure, Comedy'";
            ResultSet m = s.executeQuery(sql);
            
            
            if(m.next()){
                ListMovie.txMovieId.setText(m.getString(1));
                ImageIcon icon = new ImageIcon("src/images/Up.Shazam.png");
                ListMovie.txImage.setIcon(icon);
                ListMovie.txMoviesG.setText("UP COMING");
                ListMovie.txTitle.setText(m.getString(2));
                ListMovie.txGenre.setText(m.getString(3));
                ListMovie.txDirector.setText(m.getString(4));
                ListMovie.txWriter.setText(m.getString(5));
                ListMovie.txSynopsis.setText(m.getString(6));
                this.dispose();
                ListMovie t = new ListMovie();

                t.setVisible(true);
                t.txBooking.setVisible(false);
                t.txComingSoon.setVisible(true);
                
            }

        }catch(SQLException e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_txMovie6aUpActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        ImageIcon icon = new ImageIcon("src/images/Logo.png");
        setIconImage(icon.getImage());
    }//GEN-LAST:event_formWindowActivated
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane NowPlaying;
    private javax.swing.JScrollPane UpComing;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private javax.swing.JButton txMovie1;
    private javax.swing.JButton txMovie1Up;
    private javax.swing.JButton txMovie1a;
    private javax.swing.JButton txMovie1aUp;
    private javax.swing.JButton txMovie2;
    private javax.swing.JButton txMovie2Up;
    private javax.swing.JButton txMovie2a;
    private javax.swing.JButton txMovie2aUp;
    private javax.swing.JButton txMovie3;
    private javax.swing.JButton txMovie3Up;
    private javax.swing.JButton txMovie3a;
    private javax.swing.JButton txMovie3aUp;
    private javax.swing.JButton txMovie4;
    private javax.swing.JButton txMovie4Up;
    private javax.swing.JButton txMovie4a;
    private javax.swing.JButton txMovie4aUp;
    private javax.swing.JButton txMovie5;
    private javax.swing.JButton txMovie5Up;
    private javax.swing.JButton txMovie5a;
    private javax.swing.JButton txMovie5aUp;
    private javax.swing.JButton txMovie6;
    private javax.swing.JButton txMovie6Up;
    private javax.swing.JButton txMovie6a;
    private javax.swing.JButton txMovie6aUp;
    private javax.swing.JLabel txNowPlaying;
    private javax.swing.JLabel txProfile;
    private javax.swing.JButton txSignout;
    private javax.swing.JLabel txUpComing;
    public static final javax.swing.JLabel txUsername1 = new javax.swing.JLabel();
    private javax.swing.JLabel txWelcome;
    // End of variables declaration//GEN-END:variables

   
}
